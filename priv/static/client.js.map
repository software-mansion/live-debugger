{
  "version": 3,
  "sources": ["../../assets/client/utils/dom.js", "../../assets/client/components/debug_button/debug_button.js", "../../assets/client/components/debug_options/debug_options.js", "../../assets/client/components/debug_menu.js", "../../assets/client/services/highlight.js", "../../assets/client/services/debug_socket.js", "../../assets/client/services/inspect.js", "../../assets/client/utils/meta.js", "../../assets/client/client.js"],
  "sourcesContent": ["export function createElement(html) {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = html;\n  return tempDiv.firstElementChild;\n}\n\nexport function dispatchCustomEvent(event, payload = {}) {\n  const customEvent = new CustomEvent(event, payload);\n  document.dispatchEvent(customEvent);\n}\n", "import debugButtonHtml from './debug_button.html';\nimport { createElement, dispatchCustomEvent } from '../../utils/dom';\n\nexport default function initDebugButton() {\n  const debugButton = createElement(debugButtonHtml);\n\n  let isDragging = false;\n\n  const onClick = () => {\n    if (isDragging) {\n      placeButton();\n    } else {\n      dispatchCustomEvent('lvdbg:debug-button-click', {\n        detail: {\n          buttonRect: debugButton.getBoundingClientRect(),\n        },\n      });\n    }\n  };\n\n  const dragButton = () => {\n    isDragging = true;\n    debugButton.style.cursor = 'grabbing';\n    document.addEventListener('mousemove', onMouseMove);\n  };\n\n  const placeButton = () => {\n    isDragging = false;\n    debugButton.style.cursor = 'pointer';\n    document.removeEventListener('mousemove', onMouseMove);\n  };\n\n  const onMouseMove = (event) => {\n    const buttonWidth = debugButton.offsetWidth;\n    const buttonHeight = debugButton.offsetHeight;\n\n    // Make sure the button doesn't overflow the viewport\n    const maxLeft = window.innerWidth - buttonWidth;\n    const maxTop = window.innerHeight - buttonHeight;\n\n    const newLeft = Math.max(\n      0,\n      Math.min(event.clientX - buttonWidth / 2, maxLeft)\n    );\n    const newTop = Math.max(\n      0,\n      Math.min(event.clientY - buttonHeight / 2, maxTop)\n    );\n\n    debugButton.style.left = `${newLeft}px`;\n    debugButton.style.top = `${newTop}px`;\n    debugButton.style.right = 'auto';\n    debugButton.style.bottom = 'auto';\n  };\n\n  const ensureButtonInViewport = () => {\n    const buttonRect = debugButton.getBoundingClientRect();\n\n    const isVisible =\n      buttonRect.top >= 0 &&\n      buttonRect.left >= 0 &&\n      buttonRect.bottom <= window.innerHeight &&\n      buttonRect.right <= window.innerWidth;\n\n    if (!isVisible) {\n      debugButton.style.left = 'auto';\n      debugButton.style.top = 'auto';\n      debugButton.style.right = '20px';\n      debugButton.style.bottom = '20px';\n    }\n  };\n\n  debugButton.addEventListener('click', onClick);\n  document.addEventListener('lvdbg:move-button-click', dragButton);\n  window.addEventListener('resize', () => ensureButtonInViewport());\n\n  return debugButton;\n}\n", "import debugOptionsHtml from './debug_options.html';\nimport { createElement, dispatchCustomEvent } from '../../utils/dom';\n\nexport default function initDebugOptions({ liveDebuggerURL }) {\n  const debugOptions = createElement(debugOptionsHtml);\n\n  let isVisible = false;\n\n  const showDebugOptions = (debugButtonRect) => {\n    debugOptions.style.display = 'block';\n\n    const debugOptionsRect = debugOptions.getBoundingClientRect();\n    const debugOptionsWidth = debugOptionsRect.width;\n    const debugOptionsHeight = debugOptionsRect.height;\n\n    const scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollY = window.pageYOffset || document.documentElement.scrollTop;\n\n    // Check if the debug options would overflow on the right\n    if (debugButtonRect.right + debugOptionsWidth > window.innerWidth) {\n      debugOptions.style.left = `${debugButtonRect.left + scrollX - debugOptionsWidth}px`;\n    } else {\n      debugOptions.style.left = `${debugButtonRect.right + scrollX}px`;\n    }\n\n    // Check if the debug options would overflow on the bottom\n    if (debugButtonRect.top + debugOptionsHeight > window.innerHeight) {\n      debugOptions.style.top = `${debugButtonRect.bottom + scrollY - debugOptionsHeight}px`;\n    } else {\n      debugOptions.style.top = `${debugButtonRect.top + scrollY}px`;\n    }\n\n    isVisible = true;\n  };\n\n  const hideDebugOptions = () => {\n    debugOptions.style.display = 'none';\n    isVisible = false;\n  };\n\n  const onDebugButtonClick = (event) => {\n    const debugButtonRect = event.detail.buttonRect;\n    if (isVisible) {\n      hideDebugOptions();\n    } else {\n      showDebugOptions(debugButtonRect);\n    }\n  };\n\n  const onMoveButtonClick = () => {\n    dispatchCustomEvent('lvdbg:move-button-click');\n    hideDebugOptions();\n  };\n\n  const onNewTabButtonClick = () => {\n    window.open(liveDebuggerURL, '_blank');\n    hideDebugOptions();\n  };\n\n  const onInspectButtonClick = () => {\n    dispatchCustomEvent('lvdbg:inspect-button-click');\n    hideDebugOptions();\n  };\n\n  debugOptions\n    .querySelector('#live-debugger-debug-tooltip-open-in-new-tab')\n    .addEventListener('click', onNewTabButtonClick);\n\n  debugOptions\n    .querySelector('#live-debugger-debug-tooltip-inspect-elements')\n    .addEventListener('click', onInspectButtonClick);\n\n  debugOptions\n    .querySelector('#live-debugger-debug-tooltip-move-button')\n    .addEventListener('click', onMoveButtonClick);\n\n  document.addEventListener('lvdbg:debug-button-click', onDebugButtonClick);\n\n  document.addEventListener('lvdbg:click-outside-debug-menu', hideDebugOptions);\n\n  window.addEventListener('resize', () => {\n    if (isVisible) {\n      hideDebugOptions();\n    }\n  });\n\n  return debugOptions;\n}\n", "import initDebugButton from './debug_button/debug_button';\nimport initDebugOptions from './debug_options/debug_options';\nimport { dispatchCustomEvent } from '../utils/dom';\n\nexport default function initDebugMenu(liveDebuggerURL) {\n  const debugButton = initDebugButton();\n  const debugMenu = initDebugOptions({ liveDebuggerURL });\n\n  document.body.appendChild(debugButton);\n  document.body.appendChild(debugMenu);\n\n  // Hide menu when clicking outside\n  document.addEventListener('click', (event) => {\n    if (\n      !debugButton.contains(event.target) &&\n      !debugMenu.contains(event.target)\n    ) {\n      dispatchCustomEvent('lvdbg:click-outside-debug-menu');\n    }\n  });\n\n  return { debugButton, debugMenu };\n}\n", "const highlightElementID = 'live-debugger-highlight-element';\nconst highlightPulseElementID = 'live-debugger-highlight-pulse-element';\n\nconst isElementVisible = (element) => {\n  if (!element) return false;\n\n  const style = window.getComputedStyle(element);\n  return (\n    style.display !== 'none' &&\n    style.visibility !== 'hidden' &&\n    style.opacity !== '0'\n  );\n};\n\nfunction createHighlightElement(activeElement, detail, id) {\n  const rect = activeElement.getBoundingClientRect();\n  const highlight = document.createElement('div');\n\n  highlight.id = id;\n  highlight.dataset.attr = detail.attr;\n  highlight.dataset.val = detail.val;\n\n  highlight.style.position = 'absolute';\n  highlight.style.top = `${rect.top + window.scrollY}px`;\n  highlight.style.left = `${rect.left + window.scrollX}px`;\n  highlight.style.width = `${activeElement.offsetWidth}px`;\n  highlight.style.height = `${activeElement.offsetHeight}px`;\n  highlight.style.backgroundColor = '#87CCE880';\n  highlight.style.zIndex = '10000';\n  highlight.style.pointerEvents = 'none';\n\n  return highlight;\n}\n\nfunction removeHighlightElement() {\n  const highlightElement = document.getElementById(highlightElementID);\n\n  if (highlightElement) {\n    highlightElement.remove();\n  }\n}\n\nfunction handleHighlight({ detail }) {\n  let highlightElement = document.getElementById(highlightElementID);\n\n  if (highlightElement) {\n    highlightElement.remove();\n\n    const toClear = detail.attr === undefined || detail.val === undefined;\n    const sameElement = highlightElement.dataset.val === detail.val;\n\n    if (toClear || sameElement) {\n      return;\n    }\n  }\n\n  const activeElement = document.querySelector(\n    `[${detail.attr}=\"${detail.val}\"]`\n  );\n\n  if (isElementVisible(activeElement)) {\n    highlightElement = createHighlightElement(\n      activeElement,\n      detail,\n      highlightElementID\n    );\n    document.body.appendChild(highlightElement);\n  }\n}\n\nfunction handleHighlightResize() {\n  const highlight = document.getElementById(highlightElementID);\n  if (highlight) {\n    const activeElement = document.querySelector(\n      `[${highlight.dataset.attr}=\"${highlight.dataset.val}\"]`\n    );\n    const rect = activeElement.getBoundingClientRect();\n\n    highlight.style.top = `${rect.top + window.scrollY}px`;\n    highlight.style.left = `${rect.left + window.scrollX}px`;\n    highlight.style.width = `${activeElement.offsetWidth}px`;\n    highlight.style.height = `${activeElement.offsetHeight}px`;\n  }\n}\n\nfunction handlePulse({ detail }) {\n  const activeElement = document.querySelector(\n    `[${detail.attr}=\"${detail.val}\"]`\n  );\n\n  if (isElementVisible(activeElement)) {\n    const highlightPulse = createHighlightElement(\n      activeElement,\n      detail,\n      highlightPulseElementID\n    );\n\n    document.body.appendChild(highlightPulse);\n\n    const w = highlightPulse.offsetWidth;\n    const h = highlightPulse.offsetHeight;\n\n    highlightPulse.animate(\n      [\n        {\n          width: `${w}px`,\n          height: `${h}px`,\n          transform: 'translate(0, 0)',\n          backgroundColor: '#87CCE860',\n        },\n        {\n          width: `${w + 20}px`,\n          height: `${h + 20}px`,\n          transform: 'translate(-10px, -10px)',\n          backgroundColor: '#87CCE830',\n        },\n        {\n          width: `${w + 40}px`,\n          height: `${h + 40}px`,\n          transform: 'translate(-20px, -20px)',\n          backgroundColor: '#87CCE800',\n        },\n      ],\n      {\n        duration: 500,\n        iterations: 1,\n        delay: 200,\n      }\n    ).onfinish = () => {\n      highlightPulse.remove();\n    };\n  }\n}\n\nexport default function initHighlight() {\n  document.addEventListener('lvdbg:inspect-highlight', handleHighlight);\n  document.addEventListener('lvdbg:inspect-pulse', handlePulse);\n  document.addEventListener('lvdbg:inspect-clear', removeHighlightElement);\n\n  window.addEventListener('phx:highlight', handleHighlight);\n  window.addEventListener('resize', handleHighlightResize);\n  window.addEventListener('phx:pulse', handlePulse);\n}\n", "export default function initDebugSocket(baseURL, sessionId) {\n  const websocketURL = baseURL.replace(/^http/, 'ws') + '/client';\n\n  const debugSocket = new window.Phoenix.Socket(websocketURL, {\n    params: {\n      sessionId: sessionId ? sessionId : 'embedded',\n    },\n  });\n\n  debugSocket.connect();\n\n  const debugChannel = debugSocket.channel(`client:${sessionId}`);\n\n  debugChannel\n    .join()\n    .receive('ok', () => {\n      console.log('LiveDebugger debug connection established!');\n    })\n    .receive('error', (resp) => {\n      console.error(\n        'LiveDebugger was unable to establish websocket debug connection! Browser features will not work:\\n',\n        resp\n      );\n    });\n\n  return { debugSocket, debugChannel };\n}\n", "import { dispatchCustomEvent } from '../utils/dom';\n\nexport default function initElementInspection({ socketID, sessionURL }) {\n  let inspectMode = false;\n  let lastID = null;\n\n  const handleMove = (event) => {\n    const cid = event.target.closest('[data-phx-component]')?.dataset\n      .phxComponent;\n\n    const detail = getHighlightDetail(cid, socketID);\n\n    if (detail.val === lastID) {\n      return;\n    }\n\n    lastID = detail.val;\n\n    pushHighlightEvent(detail);\n  };\n\n  const handleInspect = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const cid = event.target.closest('[data-phx-component]')?.dataset\n      .phxComponent;\n\n    const detail = getHighlightDetail(cid, socketID);\n\n    pushPulseEvent(detail);\n\n    window.open(sessionURL + (cid ? `?node_id=${detail.val}` : ''), '_blank');\n\n    disableInspectMode();\n  };\n\n  const handleRightClick = (event) => {\n    event.preventDefault();\n    disableInspectMode();\n  };\n\n  const handleEscape = (event) => {\n    if (event.key === 'Escape') {\n      disableInspectMode();\n    }\n  };\n\n  const disableInspectMode = () => {\n    if (!inspectMode) {\n      return;\n    }\n\n    inspectMode = false;\n    lastID = null;\n\n    document\n      .getElementById('live-debugger-debug-button')\n      .classList.remove('live-debugger-inspect-mode');\n\n    pushClearEvent();\n\n    document.body.classList.remove('live-debugger-inspect-mode');\n    document.body.removeEventListener('click', handleInspect);\n    document.body.removeEventListener('mouseover', handleMove);\n    document.removeEventListener('contextmenu', handleRightClick);\n    document.removeEventListener('keydown', handleEscape);\n  };\n\n  const enableInspectMode = () => {\n    if (inspectMode) {\n      return;\n    }\n\n    inspectMode = true;\n\n    document\n      .getElementById('live-debugger-debug-button')\n      .classList.add('live-debugger-inspect-mode');\n\n    document.body.classList.add('live-debugger-inspect-mode');\n    document.body.addEventListener('click', handleInspect);\n    document.body.addEventListener('mouseover', handleMove);\n    document.addEventListener('contextmenu', handleRightClick);\n    document.addEventListener('keydown', handleEscape);\n  };\n\n  document.addEventListener('lvdbg:inspect-button-click', (event) => {\n    setTimeout(enableInspectMode);\n  });\n}\n\nfunction pushHighlightEvent(detail) {\n  dispatchCustomEvent('lvdbg:inspect-highlight', {\n    detail,\n  });\n}\n\nfunction pushPulseEvent(detail) {\n  dispatchCustomEvent('lvdbg:inspect-pulse', {\n    detail,\n  });\n}\n\nfunction getHighlightDetail(cid, socketID) {\n  if (!cid) {\n    return {\n      attr: 'id',\n      val: socketID,\n    };\n  }\n\n  return {\n    attr: 'data-phx-component',\n    val: cid,\n  };\n}\n\nfunction pushClearEvent() {\n  dispatchCustomEvent('lvdbg:inspect-clear');\n}\n", "export function fetchDebuggedSocketID() {\n  let el;\n  if ((el = document.querySelector('[data-phx-main]'))) {\n    return el.id;\n  }\n  if ((el = document.querySelector('[id^=\"phx-\"]'))) {\n    return el.id;\n  }\n  if ((el = document.querySelector('[data-phx-root-id]'))) {\n    return el.getAttribute('data-phx-root-id');\n  }\n}\n\nexport function getMetaTag() {\n  const metaTag = document.querySelector('meta[name=\"live-debugger-config\"]');\n\n  if (metaTag) {\n    return metaTag;\n  } else {\n    const message = `\n    LiveDebugger meta tag not found!\n    If you have recently bumped LiveDebugger version, please update your layout according to the instructions in the GitHub README.\n    You can find it here: https://github.com/software-mansion/live-debugger#installation\n    `;\n\n    throw new Error(message);\n  }\n}\n\nexport function fetchLiveDebuggerBaseURL(metaTag) {\n  return metaTag.getAttribute('url');\n}\n\nexport function isDebugButtonEnabled(metaTag) {\n  return metaTag.hasAttribute('debug-button');\n}\n\nexport function isHighlightingEnabled(metaTag) {\n  return metaTag.hasAttribute('highlighting');\n}\n\nexport function isRefactorEnabled(metaTag) {\n  return metaTag.hasAttribute('refactor');\n}\n", "// This file is being run in the client's debugged application\n// It introduces browser features that are not mandatory for LiveDebugger to run\n\nimport initDebugMenu from './components/debug_menu';\nimport initHighlight from './services/highlight';\nimport initDebugSocket from './services/debug_socket';\nimport initElementInspection from './services/inspect';\n\nimport {\n  getMetaTag,\n  fetchLiveDebuggerBaseURL,\n  fetchDebuggedSocketID,\n  isRefactorEnabled,\n  isDebugButtonEnabled,\n  isHighlightingEnabled,\n} from './utils/meta';\n\nwindow.document.addEventListener('DOMContentLoaded', function () {\n  const metaTag = getMetaTag();\n  const baseURL = fetchLiveDebuggerBaseURL(metaTag);\n  const socketID = fetchDebuggedSocketID();\n\n  const sessionURL = `${baseURL}/redirect/${socketID}`;\n\n  if (socketID) {\n    if (isRefactorEnabled(metaTag)) {\n      const { debugChannel } = initDebugSocket(baseURL, socketID);\n\n      debugChannel.on('ping', (resp) => {\n        console.log('Received ping', resp);\n        debugChannel.push('pong', resp);\n      });\n    }\n\n    if (isDebugButtonEnabled(metaTag)) {\n      initDebugMenu(sessionURL);\n    }\n\n    if (isHighlightingEnabled(metaTag)) {\n      initHighlight();\n    }\n\n    initElementInspection({ socketID, sessionURL });\n  }\n\n  console.info(`LiveDebugger available at: ${baseURL}`);\n});\n"],
  "mappings": "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",
  "names": ["createElement", "html", "tempDiv", "dispatchCustomEvent", "event", "payload", "customEvent", "initDebugButton", "debugButton", "createElement", "debug_button_default", "isDragging", "onClick", "placeButton", "dispatchCustomEvent", "dragButton", "onMouseMove", "event", "buttonWidth", "buttonHeight", "maxLeft", "maxTop", "newLeft", "newTop", "ensureButtonInViewport", "buttonRect", "initDebugOptions", "liveDebuggerURL", "debugOptions", "createElement", "debug_options_default", "isVisible", "showDebugOptions", "debugButtonRect", "debugOptionsRect", "debugOptionsWidth", "debugOptionsHeight", "scrollX", "scrollY", "hideDebugOptions", "onDebugButtonClick", "event", "onMoveButtonClick", "dispatchCustomEvent", "onNewTabButtonClick", "onInspectButtonClick", "initDebugMenu", "liveDebuggerURL", "debugButton", "initDebugButton", "debugMenu", "initDebugOptions", "event", "dispatchCustomEvent", "highlightElementID", "highlightPulseElementID", "isElementVisible", "element", "style", "createHighlightElement", "activeElement", "detail", "id", "rect", "highlight", "removeHighlightElement", "highlightElement", "handleHighlight", "toClear", "sameElement", "handleHighlightResize", "handlePulse", "highlightPulse", "w", "h", "initHighlight", "initDebugSocket", "baseURL", "sessionId", "websocketURL", "debugSocket", "debugChannel", "resp", "initElementInspection", "socketID", "sessionURL", "inspectMode", "lastID", "handleMove", "event", "cid", "detail", "getHighlightDetail", "pushHighlightEvent", "handleInspect", "pushPulseEvent", "disableInspectMode", "handleRightClick", "handleEscape", "pushClearEvent", "enableInspectMode", "dispatchCustomEvent", "fetchDebuggedSocketID", "el", "getMetaTag", "metaTag", "message", "fetchLiveDebuggerBaseURL", "isDebugButtonEnabled", "isHighlightingEnabled", "isRefactorEnabled", "metaTag", "getMetaTag", "baseURL", "fetchLiveDebuggerBaseURL", "socketID", "fetchDebuggedSocketID", "sessionURL", "isRefactorEnabled", "debugChannel", "initDebugSocket", "resp", "isDebugButtonEnabled", "initDebugMenu", "isHighlightingEnabled", "initHighlight", "initElementInspection"]
}
